[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s
**.cmdenv-log-level = info

image-path = ../../images

network = hellonetwork 

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

sim-time-limit = 200s

**.scalar-recording = true
**.vector-recording = true

*.playgroundSizeX = 2500m #2500 
*.playgroundSizeY = 2500m #2500
*.playgroundSizeZ = 50m    #50


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
#*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")  new code, it was uncommented out originally
#*.obstacles.debus = false
##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
#*.manager.updateInterval = 1s  #it was originally 1s
#*.manager.host = "localhost"
#*.manager.port = 9999
#*.manager.autoShutdown = true
#*.manager.launchConfig = xmldoc("helloworld.launchd.xml")

# VeinsInetManager
*.manager.updateInterval = 0.1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("helloworld.launchd.xml")
*.manager.moduleType = "org.car2x.veins.subprojects.veins_inet.VeinsInetCar"

# HostAutoConfigurator
*.node[*].ipv4.configurator.typename = "HostAutoConfigurator"
*.node[*].ipv4.configurator.interfaces = "wlan0"
*.node[*].ipv4.configurator.mcastGroups = "224.0.0.1"


##########################################################
#                       RSU SETTINGS                     #
#                                                        #
#                                                        #
##########################################################


#uncomment uncomment

#*.rsu[0].mobility.x = 1120 #1120
#*.rsu[0].mobility.y = 580
#*.rsu[0].mobility.z = 0

#*.rsu[1].mobility.x = 1520
#*.rsu[1].mobility.y = 580
#*.rsu[1].mobility.z = 0

#*.rsu[2].mobility.x = 1120
#*.rsu[2].mobility.y = 1100
#*.rsu[2].mobility.z = 0


#*.rsu[3].mobility.x = 1520
#*.rsu[3].mobility.y = 1100
#*.rsu[3].mobility.z = 0

#*.rsu[*].applType = "TraCIDemoRSU11p"
#*.rsu[*].appl.headerLength = 80 bit
#*.rsu[*].appl.sendBeacons = false #new code it was false originally
#*.rsu[*].appl.dataOnSch = false
#*.rsu[*].appl.beaconInterval = 25s #new code it was 5s originally
#*.rsu[*].appl.beaconUserPriority = 7
#*.rsu[*].appl.dataUserPriority = 5
#*.rsu[*].nic.phy80211p.antennaOffsetZ = 0 m #### this is a new code - it was originially zero -hjy


#488,393

##########################################################
#                       new code                     #
#                                                        #
#                                                        #
##########################################################

*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = false # it was true; this is the direction showing from front.  
*.visualizer.*.mobilityVisualizer.displayVelocities = false #arrow sign velocity 
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true #movement tail
*.visualizer.*.mobilityVisualizer.animationSpeed = 0.5 # it was originally 1




**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 600m  #it was 400
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 480m  #it was 400
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 50m     #it was 0


*.numDrones = 10  #uncomment this line later




#######power#########
*.drone[*].osgModel = "3d/glider.osgb.100.scale.0,0,180.rot"
# visualizer
*.visualizer.*.energyStorageVisualizer.displayEnergyStorages = true

# status
*.drone[*].hasStatus = true





########### new code #uncomment uncomment
#*.*.ipv4.arp.typename = "GlobalArp"



#it was orignially drone
*.node[0].numApps = 1
*.node[0].app[0].typename = "UdpBasicApp"

*.node[0].app[0].destAddresses = "rsu0"
*.node[0].app[0].destPort = 9999
*.node[0].app[0].messageLength = 1B

*.node[0].app[0].sendInterval = exponential(30s)
*.node[0].app[0].packetName = "UDPData"




#it was originally rsu
*.rsu0.numApps = 1
*.rsu0.app[0].typename = "UdpSink"
*.rsu0.app[0].localPort = 9999

*.*.wlan[0].typename = "AckingWirelessInterface"
*.*.wlan[0].mac.useAck = false
*.*.wlan[0].mac.fullDuplex = false

*.*.wlan[0].radio.receiver.ignoreInterference = true
*.*.wlan[0].mac.headerLength = 23B

#*.drone*.**.bitrate = 1Mbps #it was drone
#*.CCS*.**.bitrate = 1Mbps #it was ccs
#####

*.node[0].**.bitrate = 1Mbps #it was drone
*.rsu0.**.bitrate = 1Mbps #it was ccs
#####



#-----------------------------------------------------------------------------

#description = Setting up some animations




#new code 
*.visualizer.sceneVisualizer.descriptionFigure = "title"

*.visualizer.mediumVisualizer.displaySignals = true

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"


#description = Adding more nodes and decreasing the communication range


#*.host*.wlan[0].radio.transmitter.communicationRange = 250m

#*.hostR1.wlan[0].radio.displayCommunicationRange = true


#description = Setting up static routing

*.*.forwarding = true

#*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
#*.*.ipv4.routingTable.netmaskRoutes = ""

#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.dataLinkVisualizer.displayLinks = true
#*.visualizer.networkRouteVisualizer.displayRoutes = true
#*.visualizer.*LinkVisualizer.lineShift = 0
#*.visualizer.networkRouteVisualizer.lineShift = 0
#*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"

######################



# radio
#*.*.wlan[*].radio.typename = "Ieee80211UnitDiskRadio"
#*.*.wlan[0].typename = "WirelessInterface"
*.*.wlan[0].radio.typename = "UnitDiskRadio"



*.drone[0].wlan[0].radio.transmitter.communicationRange = 48.5m
*.drone[1..9].wlan[0].radio.transmitter.communicationRange = 48.5m

#*.CCS.wlan[*].radio.transmitter.communicationRange = 600m
*.GCS.wlan[0].radio.transmitter.communicationRange = 0m
*.GCGS.wlan[0].radio.transmitter.communicationRange = 0m
*.CCS.wlan[0].radio.transmitter.communicationRange = 0m
#**.radio.transmitter.interferenceRange = 100m
#**.radio.transmitter.detectionRange = 200m
#**.displayCommunicationRanges = true

*.*.wlan[0].radio.displayCommunicationRange = true


# power
*.drone[*].wlan[0].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
#*.drone[*].wlan[0].radio.energyConsumer.energySourceModule = "UnitDiskRadio"
*.drone[*].wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.drone[*].wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW #new code
*.drone[*].wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.drone[*].wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.drone[*].wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.drone[*].wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.drone[*].wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW # continue previous line



*.drone[*].energyStorage.typename = "SimpleEpEnergyStorage"
*.drone[*].energyStorage.nominalCapacity = 0.3J #it was 0.05J
*.drone[*].energyStorage.initialCapacity = nominalCapacity

*.drone[*].energyManagement.typename = "SimpleEpEnergyManagement"
*.drone[*].energyManagement.nodeStartCapacity = 0.5 * parent.energyStorage.nominalCapacity #start threshold
*.drone[*].energyManagement.nodeShutdownCapacity = 0.1 * parent.energyStorage.nominalCapacity #shutdown threshold


#*.drone[*].energyGenerator.typename = "AlternatingEpEnergyGenerator"
#*.drone[*].energyGenerator.energySinkModule = "^.energyStorage"
#*.drone[*].energyGenerator.powerGeneration = 4mW
#*.drone[*].energyGenerator.sleepInterval = exponential(25s)
#*.drone[*].energyGenerator.generationInterval = exponential(25s)



# 802.11
# TODO: this parameter shouldn't be here, but currently 802.11g mode uses slowest
# mandatory mode (1Mbps) for ACK frames, and fastest mode (54Mbps) for data frames
# the end result is that ACK frames take much time on the medium than the ping
# request/ping reply frames.

#*.drone[*].wlan[*].opMode = "p"
#*.drone[*].wlan[*].mac.*.dataFrameBitrate = 54Mbps

# ping app
#*.drone[0].numApps = 0
#*.drone[*].numApps = 1
#*.drone[*].app[0].typename = "PingApp"
#*.drone[*].app[0].destAddr = "drone[0]"
#*.drone[*].app[0].printPing = true



# power
#*.drone[*].energyStorage.typename = "SimpleEpEnergyStorage"

#*.host[*].wlan[*].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
#*.drone[*].energyStorage.nominalCapacity = 0.05J #maximum capacity
#*.drone[*].energyStorage.initialCapacity = nominalCapacity #initial capacity
#*.drone[*].energyStorage.printCapacityStep = 0.01 * nominalCapacity
#*.drone[*].energyStorage.initialCapacity = uniform(0.1 * nominalCapacity, nominalCapacity)



#*.drone[*].energyGenerator.typename = "AlternatingEpEnergyGenerator"
#*.drone[*].energyGenerator.powerGeneration = 4mW
#*.drone[*].energyGenerator.sleepInterval = exponential(25s)
#*.drone[*].energyGenerator.generationInterval = exponential(25s)


#*.drone[*].energyManagement.typename = "SimpleEpEnergyManagement"
#*.drone[*].energyManagement.nodeStartCapacity = 0.5 * 0.05J#parent.energyStorage.nominalCapacity  #start threshold
#*.drone[*].energyManagement.nodeShutdownCapacity = 0.1 * 0.05J#parent.energyStorage.nominalCapacity #shutdown threshold 




#############BonnMobility##################

#**.drone[*].mobility.typename = "BonnMotionMobility"
#**.host[*].mobility.traceFile = "bonnmotion.movements"
#**.host[*].mobility.is3D = falses
#**.host[*].mobility.nodeId = -1
*.drone[*].mobility.initFromDisplayString = false # it was false
*.drone[*].mobility.updateInterval = 0.1s #the simulation time interval used to regularly signal mobility state changes and update the display
*.drone[*].mobility.faceForward = true
*.drone[*].mobility.is3D = true # it was false
*.drone[*].mobility.nodeId = -1

#later uncomment drone0 to 9

#drone0
*.drone[0].mobility.typename = "BonnMotionMobility"
*.drone[0].mobility.traceFile = "bonnmotion.movements"


#drone1
*.drone[1].mobility.typename = "BonnMotionMobility"
*.drone[1].mobility.traceFile = "bonnmotion.movements"


#drone2
*.drone[2].mobility.typename = "BonnMotionMobility"
*.drone[2].mobility.traceFile = "bonnmotion.movements"


#drone3
*.drone[3].mobility.typename = "BonnMotionMobility"
*.drone[3].mobility.traceFile = "bonnmotion.movements"


#drone4
*.drone[4].mobility.typename = "BonnMotionMobility"
*.drone[4].mobility.traceFile = "bonnmotion.movements"


#drone5
*.drone[5].mobility.typename = "BonnMotionMobility"
*.drone[5].mobility.traceFile = "bonnmotion.movements"


#drone6
*.drone[6].mobility.typename = "BonnMotionMobility"
*.drone[6].mobility.traceFile = "bonnmotion.movements"


#drone7
*.drone[7].mobility.typename = "BonnMotionMobility"
*.drone[7].mobility.traceFile = "bonnmotion.movements"


#drone8
*.drone[8].mobility.typename = "BonnMotionMobility"
*.drone[8].mobility.traceFile = "bonnmotion.movements"



#drone9
*.drone[9].mobility.typename = "BonnMotionMobility"
*.drone[9].mobility.traceFile = "bonnmotion.movements"







################## linear model ######################
#*.drone[*].mobility.initFromDisplayString = false

#*.drone[*].mobility.updateInterval = 0.1s #the simulation time interval used to regularly signal mobility state changes and update the display
#*.drone[*].mobility.faceForward = true

#drone0
#*.drone[0].mobility.typename = "LinearMobility"
#*.drone[0].mobility.speed = 30mps
#*.drone[0].mobility.initialMovementHeading =uniform(270deg,270deg) #it was 0, 360

#drone1
#*.drone[1].mobility.typename = "LinearMobility"
#*.drone[1].mobility.speed = 30mps
#*.drone[1].mobility.initialMovementHeading =uniform(270deg, 270deg) #it was 0, 360

#drone2
#*.drone[2].mobility.typename = "LinearMobility"
#*.drone[2].mobility.speed = 30mps
#*.drone[2].mobility.initialMovementHeading =uniform(270deg, 270deg) #it was 0, 360

#drone3
#*.drone[3].mobility.typename = "LinearMobility"
#*.drone[3].mobility.speed = 30mps
#*.drone[3].mobility.initialMovementHeading =uniform(270deg, 270deg) #it was 0, 360

#*.drone[0].mobility.initialX = 400m
#*.drone[0].mobility.initialY = 350m
#*.drone[0].mobility.initialZ = 0m

#*.drone[1].mobility.initialX = 460m
#*.drone[1].mobility.initialY = 350m
#*.drone[1].mobility.initialZ = 0m
#*.drone[2].mobility.initialX = 520m
#*.drone[2].mobility.initialY = 350m
#*.drone[2].mobility.initialZ = 0m
#*.drone[3].mobility.initialX = 580m
#*.drone[3].mobility.initialY = 350m
#*.drone[3].mobility.initialZ = 0m


#*.drone[4..9].mobility.typename = "StationaryMobility"
#*.drone[4].mobility.initialX = 400m
#*.drone[4].mobility.initialY = 400m
#*.drone[4].mobility.initialZ = 0m
#*.drone[5].mobility.initialX = 460m
#*.drone[5].mobility.initialY = 400m
#*.drone[5].mobility.initialZ = 0m
#*.drone[6].mobility.initialX = 520m
#*.drone[6].mobility.initialY = 400m
#*.drone[6].mobility.initialZ = 0m
#*.drone[7].mobility.initialX = 580m
#*.drone[7].mobility.initialY = 400m
#*.drone[7].mobility.initialZ = 0m
#*.drone[8].mobility.initialX = 400m
#*.drone[8].mobility.initialY = 450m
#*.drone[8].mobility.initialZ = 0m
#*.drone[9].mobility.initialX = 460m
#*.drone[9].mobility.initialY = 450m
#*.drone[9].mobility.initialZ = 0m






###end of new code

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
########################################################## uncomment uncomment
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600 m # new code it was 2600 m originally
*.connectionManager.drawMaxIntfDist = false # new code it was false
#*.**.nic.mac1609_4.useServiceChannel = false

#*.**.nic.mac1609_4.txPower = 20mW
#*.**.nic.mac1609_4.bitrate = 6Mbps

#*.**.nic.phy80211p.minPowerLevel = -110dBm

#*.**.nic.phy80211p.useNoiseFloor = true
#*.**.nic.phy80211p.noiseFloor = -98dBm

#*.**.nic.phy80211p.decider = xmldoc("config.xml")
#*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
#*.**.nic.phy80211p.usePropagationDelay = true

#*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
#*.node[*].nic.phy80211p.antennaOffsetY = 0 m
#*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m

##########################################################
#                      App Layer                         #
########################################################### uncomment uncomment
#*.node[*].applType = "TraCIDemo11p"
#*.node[*].applType = "MyVeinsApp"
#*.node[*].appl.headerLength = 80 bit
#*.node[*].appl.sendBeacons = true #new code it was originally false
#*.node[*].appl.dataOnSch = false
#*.node[*].appl.beaconInterval = 50s

##########################################################
#                      Mobility                          #
###########################################################uncomment uncomment
*.node[*].mobility.typename = "VeinsInetMobility"
#*.node[*].veinsmobility.x = 0
#*.node[*].veinsmobility.y = 0
#*.node[*].veinsmobility.z = 0
#*.node[*].veinsmobility.setHostSpeed = false
#*.node[*0].veinsmobility.accidentCount = 0
#*.node[*0].veinsmobility.accidentStart = 73s
#*.node[*0].veinsmobility.accidentDuration = 50s




[Config Default]

[Config WithBeaconing]
*.rsu[*].appl.sendBeacons = true
*.node[*].appl.sendBeacons = true

[Config WithChannelSwitching]
*.**.nic.mac1609_4.useServiceChannel = true
*.node[*].appl.dataOnSch = true
*.rsu[*].appl.dataOnSch = true



