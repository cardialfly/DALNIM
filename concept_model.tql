#shared concept model schema for VT AND GMU 

#define entity
define 
MIAEntity sub entity;
Performer sub MIAEntity;
#attack is same as cyber attack in the model
CyberAttacks sub MIAEntity;
Attacker sub Performer;
Defender sub Performer;
Service sub Performer;
#defense is same as defense mechanism in the model
DefenseMechanisms sub MIAEntity;
#ips and ids are subtpyes of defense mechanism
IPS sub DefenseMechanisms;
IDS sub DefenseMechanisms; 

Asset sub MIAEntity;
Vulnerabilities sub MIAEntity;
Capacity sub MIAEntity;
Task sub MIAEntity;
PrecedenceTask sub entity;
ORPrecedenceTaskList sub PrecedenceTask;
ANDPrecedenceTaskList sub PrecedenceTask;

Mission sub MIAEntity;
STRAM sub MIAEntity;
VulnerabilityMetrics sub MIAEntity;
Goal sub MIAEntity;
Outcome sub MIAEntity;

#define attributes - attribute can only be instantiated at the leaves. A parent attribute can't be instantiated with data
# I don't have UID attributes for other entity node other than the super-entity node here due to inheritance.
define 
UID sub attribute,
    value string; 
MIAEntity sub entity,
    owns UID @key;
    
#name sub attribute,
#   value string; 
#MIAEntity sub entity,
#    owns name;



####### define relation between entities
define
hasVulnerabilities sub relation,
    relates asset, 
    relates vulnerabilities;

Asset sub MIAEntity,
    plays hasVulnerabilities:asset;
Vulnerabilities sub MIAEntity,
    plays hasVulnerabilities:vulnerabilities;
    

#####################
define
hasCapacity sub relation,
    relates asset, 
    relates capacity;

Asset sub MIAEntity,
    plays hasCapacity:asset;
Capacity sub MIAEntity,
    plays hasCapacity:capacity;
    
###############
define
hasGoal sub relation,
    relates mission, 
    relates goal;

Mission sub MIAEntity,
    plays hasGoal:mission;
Goal sub MIAEntity,
    plays hasGoal:goal;
    
####
define
hasOutcome sub relation,
    relates mission, 
    relates outcome;

Mission sub MIAEntity,
    plays hasOutcome:mission;
Outcome sub MIAEntity,
    plays hasOutcome:outcome;    
    
    
####
define
isMeasuredBySTRAM sub relation,
    relates outcome, 
    relates stram;

Outcome sub MIAEntity,
    plays isMeasuredBySTRAM:outcome;
STRAM sub MIAEntity,
    plays isMeasuredBySTRAM:stram;   
    
    
####
define
isMeasuredByVulnerabilityMetrics sub relation,
    relates vulnerabilities, 
    relates vulnerability_metrics;

Vulnerabilities sub MIAEntity,
    plays isMeasuredByVulnerabilityMetrics:vulnerabilities;
VulnerabilityMetrics sub MIAEntity,
    plays isMeasuredByVulnerabilityMetrics:vulnerability_metrics;   


####
define
performAttack sub relation,
    relates attacker, 
    relates attack;

Attacker sub Performer,
    plays performAttack:attacker;
Attack sub MIAEntity,
    plays performAttack:attack;  
    
####
define
performDefense sub relation,
    relates defender, 
    relates defense_mechanisms;

Defender sub Performer,
    plays performDefense:defender;
DefenseMechanisms sub MIAEntity,
    plays performDefense:defense_mechanisms;  


####
define
detects sub relation,
    relates ids, 
    relates attack;

IDS sub DefenseMechanisms,
    plays detects:ids;
Attack sub MIAEntity,
    plays detects:attack;
    
####
define
deters sub relation,
    relates ips, 
    relates attack;

IPS sub DefenseMechanisms,
    plays deters:ips;
Attack sub MIAEntity,
    plays deters:attack;
    
####
define
exploits sub relation,
    relates attack, 
    relates vulnerabilities;

Attack sub MIAEntity,
    plays exploits:attack;
Vulnerabilities sub MIAEntity,
    plays exploits:vulnerabilities;
  
####
define
mitigates sub relation,
    relates defense_mechanisms, 
    relates vulnerabilities;

DefenseMechanisms sub MIAEntity,
    plays mitigates:defense_mechanisms;
Vulnerabilities sub MIAEntity,
    plays mitigates:vulnerabilities;
    
####
define
provides sub relation,
    relates asset, 
    relates service;

Asset sub MIAEntity,
    plays provides:asset;
Service sub Performer,
    plays provides:service;


####
#define
#enablement sub relation,
 #   relates enabler, 
  #  relates enabled;

#service sub entity,
 #   plays enablement:enabler;
#task sub entity,
 #   plays enablement:enabled;
   

####
define
isCompoundBy sub relation,
    relates task, 
    relates mission;

Task sub MIAEntity,
    plays isCompoundBy:task;
Mission sub MIAEntity,
    plays isCompoundBy:mission;
    
####
define
isCompoundBySetOfTask sub relation,
    relates task, 
    relates precedence_task;

Task sub MIAEntity,
    plays isCompoundBySetOfTask:task;
PrecedenceTask sub entity,
    plays isCompoundBySetOfTask:precedence_task;
    
    
#######
define
isPrecededBySetOfTask sub relation,
    relates task, 
    relates precedence_task;

Task sub MIAEntity,
    plays isPrecededBySetOfTask:task;
PrecedenceTask sub entity,
    plays isPrecededBySetOfTask:precedence_task;


##################
define 
isPerformedBy sub relation,
    relates performer,
    relates task;
Performer sub MIAEntity,
    plays isPerformedBy:performer;
Task sub MIAEntity,
    plays isPerformedBy:task;
    

########
#relation for topology discovery
#define
#c sub relation,
#    relates connected, 
#    relates connected;
#MIAEntity sub entity,
#   plays c:connected;
#MIAEntity sub entity,
#   plays c:connected;
